#!/bin/bash

MOD_FILE="src/days/mod.rs"

read -p "Enter day name: " -r DAY_NAME;

if [[ -z "$DAY_NAME" ]]; then
    echo "Day name cannot be empty!"
    exit 1
fi

mkdir -p "src/days/$DAY_NAME/data" || { echo "Failed to create directory!"; exit 1; }

touch "src/days/$DAY_NAME/data/part1.txt" || { echo "Failed to create part1.txt"; exit 1; }

touch "src/days/$DAY_NAME/mod.rs" || { echo "Failed to create mod.rs"; exit 1; }

cat > "src/days/$DAY_NAME/mod.rs" <<EOF
pub mod main;

pub use main::functions;
EOF

touch "src/days/$DAY_NAME/main.rs"

cat > "src/days/$DAY_NAME/main.rs" <<EOF
use crate::days::Day;

fn part1(_data: Vec<String>) -> () {
}

fn part2(_data: Vec<String>) -> () {
}

pub fn functions() -> Day {
    Day {
        part1: Some(part1),
        part2: Some(part2),
    }
}
EOF

if ! grep -q "pub mod $DAY_NAME;" "$MOD_FILE"; then
    sed -i '' "1i\\
pub mod $DAY_NAME;
" "$MOD_FILE"
fi

if ! grep -q "\"$DAY_NAME\".to_string()" "$MOD_FILE"; then
    sed -i '' "/pub fn get_day_str(day: u8) -> Option<String> {/,/}/ s/        _ => None,/        $(($(grep -c '^pub mod' "$MOD_FILE"))) => Some(\"$DAY_NAME\".to_string()),\\
        _ => None,/" "$MOD_FILE"
fi

if ! grep -q "$DAY_NAME::functions()" "$MOD_FILE"; then
    sed -i '' "/pub fn get_day(day: u8) -> Option<Day> {/,/}/ s/        _ => None,/        $(($(grep -c '^pub mod' "$MOD_FILE"))) => Some($DAY_NAME::functions()),\\
        _ => None,/" "$MOD_FILE"
fi
make fix;
